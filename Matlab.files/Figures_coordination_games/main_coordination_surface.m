clear all

%Define the game and some useful quantities k1,k2,xmix,ymix.
A = [3 0; 2 1.5];
B = [3 2; 0 1.5];
%B = -A;
n = size(A,1);
I = eye(n);

k1   = A(1,1)-A(2,1)-A(1,2)+A(2,2);
k2   = B(1,1)-B(2,1)-B(1,2)+B(2,2);
xmix = (B(2,2)-B(2,1))/k2;
ymix = (A(2,2)-A(1,2))/k1;
p    = ceil(A(1,1));

%Avoid numerical instabilities at 0 and 1.
epsilon = 1e-7;
L       = epsilon;
U       = 1-epsilon;

% Global parameters: number of rounds (updates of betas/distibutions) and number of Q-value updates (inner) in each round
rounds = 20000;
inner  = 1e+10;
tplot  = 1:rounds;

% X-player parameters;
min_x = 0.0001;
max_x = 9;
low_x = 0.000001;
end_x = 0.1*rounds;
top_x = 0.5;

% X-Policies: ETE, CLR-1
rates_ete_x = [linspace(max_x,min_x,rounds-end_x) linspace(min_x, low_x, end_x)];
rates_clr_x = [linspace(min_x,max_x,(rounds-end_x)*top_x) linspace(max_x,min_x,(rounds-end_x)*(1-top_x)) linspace(min_x, low_x, end_x)];

% Y-player parameters;
min_y = 0.0001;
max_y = 6;
low_y = 0.00001;
end_y = 0.1*rounds;
top_y = 0.6;

% Y-Policies: ETE, CLR-1
rates_ete_y = [linspace(max_y,min_y,rounds-end_y) linspace(min_y, low_y, end_y)];
rates_clr_y = [linspace(min_y,max_y,(rounds-end_y)*top_y) linspace(max_y,min_y,(rounds-end_y)*(1-top_y)) linspace(min_y, low_y, end_y)];

% Exploration-exploitation policy of agent x.
rates_x = rates_clr_x;
xbar    = max(rates_x);
%xbar    = 9;
rates_x = xbar-rates_x;
a_x     = 0.00001*ones(1,rounds);
b_x     = rates_x.*a_x;

% Exploration-exploitation policy of agent y.
rates_y = rates_clr_y;
ybar    = max(rates_y);
%ybar    = 6;
rates_y = ybar-rates_y;
a_y     = 0.0001*ones(1,rounds);
b_y     = rates_y.*a_y;

% Dynamics: Q-values and strategy updates
x      = ones(n,rounds)*0.5;
x(:,1) = [1 0];
Qx     = zeros(n,rounds);
y      = x;
Qy     = Qx;

for t = 1:rounds-1
    for i = 1:n 
        nx = x(i,t)*inner;
        ny = y(i,t)*inner;
        r_x = A(i,1)*y(1,t)+A(i,2)*y(2,t);
        r_y = B(1,i)*x(1,t)+B(2,i)*x(2,t);
        Qx(i,t+1) = (r_x/a_x(t))*(1-(1-a_x(t))^(nx+1))+Qx(i,t)*(1-a_x(t))^nx;
        Qy(i,t+1) = (r_y/a_y(t))*(1-(1-a_y(t))^(ny+1))+Qy(i,t)*(1-a_y(t))^ny; 
        x(i,t+1)  = exp(Qx(i,t+1)*b_x(t));
        y(i,t+1)  = exp(Qy(i,t+1)*b_y(t));
    end
    x(:,t+1) = x(:,t+1)/norm(x(:,t+1),1);
    y(:,t+1) = y(:,t+1)/norm(y(:,t+1),1);
end

xplot = x(1,:);
yplot = y(1,:);
set(groot,'defaultAxesTickLabelInterpreter','latex','defaulttextinterpreter','latex','defaultLegendInterpreter','latex');
clr   = [0.301 0.745 0.933]; %clr = [0.929 0.694 0.125]; %green 
clr   = [0 0.447 0.741]; %blue

% Figure 1: Exploration rates and probability of first action
fig1 = figure(1);
subplot(2,2,1);
hold all
plot(tplot,ybar-rates_y, 'Color', [0 0.4470 0.7410] ,'LineWidth',1.5);
plot(tplot,xbar-rates_x,'r','LineWidth',1.5);
title('Exploration rates: $\delta_x,\delta_y$')

subplot(2,2,2);
hold all
p1 = plot(tplot,xplot,'r.','MarkerSize',3);
p2 = plot(tplot,yplot,'.','MarkerSize',3,'Color',clr);
p3 = plot(tplot(1),xplot(1),'r');
p4 = plot(tplot(1),yplot(1),'Color', clr);
legend([p3 p4], {'agent 1', 'agent 2'},'Location','best')
title('Probability of first action: $x,y$')

%% Plot 2
% Figure 2: QRE surface and exploration path
fig2  = figure(2);
myfun = @(g_x,g_y,u_x) k1.*(xbar-g_x).*exp(-log(exp(-k2.*(ybar-g_y).*(u_x-xmix))+1))-k1.*(xbar-g_x).*ymix+log(1-u_x)-log(u_x);
fs    = fimplicit3(myfun,[0 xbar 0 ybar L U],'MeshDensity',50);
%clr   = [0.301 0.745 0.933]; %clr = [0.929 0.694 0.125]; %green 
fs.EdgeColor       = 'none';
fs.AmbientStrength = 0.7;
fs.FaceAlpha       = 0.7;
clr = [ 0.3010    0.7450    0.9330];
fs.FaceColor       = clr;
camlight(10,70)
view([40 30]); 
%view([-125 25]);
title('QRE surface \& exploration path','FontSize', 10)
%title('\textbf{Spoiled Child}: CLR-1 vs CLR-1','FontSize', 10)
xlabel('$\delta_x$');
ylabel('$\delta_y$');
zlabel('$P(a_1)$')
%fix_labels;

hold on
scatter3(xbar-rates_x,ybar-rates_y,xplot,8,tplot,'.')
orig1 = get(gca, 'Position');

% Colormap for Figure 2
map = copper;
map = flipud(map(40:end,:));
colormap(map);

% an = animatedline('Color', 'r', 'Linestyle', 'none', 'Marker', '.');
% dim1 = xbar-rates_x;
% dim2 = ybar-rates_y;
% dim3 = xplot;
% 
% for i = 1:length(dim1)
%     addpoints(an,dim1(i),dim2(i),dim3(i));
%     drawnow limitrate;
%     pause(0.0000001);
% end

cbr = colorbar('FontSize',8,'TickLabelInterpreter','latex','location','eastoutside','AxisLocation','in');
cbr.Label.String      = 'Iterations';
cbr.Label.FontSize    = 10;
cbr.Label.Interpreter = 'latex';
% 
% % Position of colorbar below Figure 2
cpos     = get(cbr,'Position');
set(cbr,'Position',[cpos(1)+0.12 cpos(2)+0.03 0.01 cpos(4)*0.9]);
orig1(1) = orig1(1)-0.03;
orig1(3) = orig1(3)*0.95;
orig1(4) = orig1(4)*0.95;
set(gca,'Position',orig1)
exportgraphics(fig2,['figure_stag_main_3.png'],'BackgroundColor','white','Resolution','500')